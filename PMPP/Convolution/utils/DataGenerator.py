# A script to generate the input matrix and kernel matrix for convolution operation.
# The input matrix is generated by random numbers, and the kernel matrix is generated by Gaussian distribution.

import numpy as np
import struct
import argparse

def generate_conf_data(width, height, r):
    input_matrix = np.random.rand(width, height).astype(np.float32)
    kernel_matrix = np.random.normal(0, 1, ((2 * r + 1), (2 * r + 1))).astype(np.float32)


    with open("data/input.dat", "wb") as fi:
        fi.write(struct.pack("i", width))
        fi.write(struct.pack("i", height))
        fi.write(struct.pack("i", r))
        fi.write(input_matrix.tobytes())
        fi.write(kernel_matrix.tobytes())

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--width", type=int, default=8192, help="Width of the input matrix")
    parser.add_argument("--height", type=int, default=8192, help="Height of the input matrix")
    parser.add_argument("--r", type=int, default=3, help="Radius of the kernel matrix")
    args = parser.parse_args()

    generate_conf_data(args.width, args.height, args.r)